{"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"ParsableArguments.parseOrExit(_:)"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parseOrExit","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"arguments","kind":"internalParam"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]? = nil) -> "},{"text":"Self","kind":"typeIdentifier"}]}]}],"metadata":{"extendedModule":"ArgumentParser","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"parseOrExit","kind":"identifier"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"]?) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"parseOrExit(_:)","modules":[{"name":"GeneratorCommands","relatedModules":["ArgumentParser"]}],"symbolKind":"method","role":"symbol","roleHeading":"Type Method","externalID":"s:14ArgumentParser17ParsableArgumentsPAAE11parseOrExityxSaySSGSgFZ::SYNTHESIZED::s:17GeneratorCommands13VHDLGeneratorV"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/generatorcommands\/vhdlgenerator\/parseorexit(_:)"]}],"hierarchy":{"paths":[["doc:\/\/GeneratorCommands\/documentation\/GeneratorCommands","doc:\/\/GeneratorCommands\/documentation\/GeneratorCommands\/VHDLGenerator","doc:\/\/GeneratorCommands\/documentation\/GeneratorCommands\/VHDLGenerator\/ParsableArguments-Implementations"]]},"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/GeneratorCommands\/documentation\/GeneratorCommands\/VHDLGenerator\/parseOrExit(_:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://GeneratorCommands/documentation/GeneratorCommands/VHDLGenerator":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"VHDLGenerator"}],"title":"VHDLGenerator","abstract":[{"text":"A sub-command that generates VHDL source files from LLFSM definitions.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"VHDLGenerator","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/generatorcommands\/vhdlgenerator","identifier":"doc:\/\/GeneratorCommands\/documentation\/GeneratorCommands\/VHDLGenerator"},"doc://GeneratorCommands/documentation/GeneratorCommands":{"role":"collection","title":"GeneratorCommands","type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/generatorcommands","identifier":"doc:\/\/GeneratorCommands\/documentation\/GeneratorCommands"},"doc://GeneratorCommands/documentation/GeneratorCommands/VHDLGenerator/ParsableArguments-Implementations":{"kind":"article","abstract":[],"url":"\/documentation\/generatorcommands\/vhdlgenerator\/parsablearguments-implementations","type":"topic","title":"ParsableArguments Implementations","identifier":"doc:\/\/GeneratorCommands\/documentation\/GeneratorCommands\/VHDLGenerator\/ParsableArguments-Implementations","role":"collectionGroup"},"doc://GeneratorCommands/documentation/GeneratorCommands/VHDLGenerator/parseOrExit(_:)":{"kind":"symbol","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"parseOrExit"},{"text":"([","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"]?) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/generatorcommands\/vhdlgenerator\/parseorexit(_:)","type":"topic","title":"parseOrExit(_:)","identifier":"doc:\/\/GeneratorCommands\/documentation\/GeneratorCommands\/VHDLGenerator\/parseOrExit(_:)","role":"symbol"}}}